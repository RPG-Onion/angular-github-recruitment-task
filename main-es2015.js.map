{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/GithubModue/Github.module.ts","./src/app/GithubModue/Services/Github.service.ts","./src/app/GithubModue/Store/Actions/Github.actions.ts","./src/app/GithubModue/Store/Effects/Github.effects.ts","./src/app/GithubModue/Store/Reducers/Github.store.ts","./src/app/GithubModue/Store/Reducers/GithubUser.reducer.ts","./src/app/GithubModue/Store/Selectors/github.selectors.ts","./src/app/GithubModue/index.ts","./src/app/Layout/header/header.component.ts","./src/app/Layout/header/header.component.html","./src/app/Layout/layout/layout.component.ts","./src/app/Layout/layout/layout.component.html","./src/app/Pages/user-page/Components/repo-tile/repo-tile.component.ts","./src/app/Pages/user-page/Components/repo-tile/repo-tile.component.html","./src/app/Pages/user-page/Components/repos-list/repos-list.component.ts","./src/app/Pages/user-page/Components/repos-list/repos-list.component.html","./src/app/Pages/user-page/user-page.component.ts","./src/app/Pages/user-page/user-page.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/router.selectors.ts","./src/environments/environment.ts","./src/lib/Store/Common.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClientModule }                from '@angular/common/http';\r\nimport { NgModule }                        from '@angular/core';\r\nimport { EffectsModule }                   from '@ngrx/effects';\r\nimport { StoreModule }                     from '@ngrx/store';\r\nimport { GithubService }                   from './Services/Github.service';\r\nimport { GithubEffects }     from './Store/Effects/Github.effects';\r\nimport { githubFeatureKey }  from './Store/Reducers/Github.store';\r\nimport { GithubUserReducer } from './Store/Reducers/GithubUser.reducer';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    HttpClientModule,\r\n    EffectsModule.forFeature([ GithubEffects ]),\r\n    StoreModule.forFeature(githubFeatureKey, GithubUserReducer),\r\n  ],\r\n  providers: [ GithubService ],\r\n  bootstrap: []\r\n})\r\nexport class GithubModule {\r\n}\r\n","import { HttpClient, HttpHeaders }        from '@angular/common/http';\nimport { Injectable }                     from '@angular/core';\nimport { Observable, of }                 from 'rxjs';\nimport { catchError }                     from 'rxjs/operators';\nimport { IGithubRepository, IGithubUser } from '../Models';\nimport { IGithubBranch }                  from '../Models/IGithubBranch';\n\n@Injectable()\nexport class GithubService {\n\n  public baseUrl: string = 'https://api.github.com';\n\n  constructor(\n    public http: HttpClient\n  ) {\n  }\n\n  private parseUrl(url: string) {\n    return url.replace(/{.+?}/, '');\n  }\n\n  private get headers() {\n    return {\n      'Content-Type': 'application/json',\n      Authorization: '443322e43320fd3a374b736708d65d606091714f'\n    };\n  }\n\n  public getUser(username: string): Observable<IGithubUser | null> {\n    return this.http.get<IGithubUser>(`${ this.baseUrl }/users/${ username }`, {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of(null))\n    );\n  }\n\n  public getUsersRepositories(user: IGithubUser): Observable<IGithubRepository[]> {\n    return this.http.get<IGithubRepository[]>(user.repos_url, {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of([]))\n    );\n  }\n\n  public getRepoBranches(repo: IGithubRepository): Observable<IGithubBranch[]> {\n    return this.http.get<IGithubBranch[]>(this.parseUrl(repo.branches_url), {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of([]))\n    );\n  }\n}\n","import { createAction, props }            from '@ngrx/store';\r\nimport { IGithubRepository, IGithubUser } from '../../Models';\r\nimport { IGithubBranch }                  from '../../Models/IGithubBranch';\r\n\r\nexport const fetchUser = createAction('[Github] Get User', props<{ username: string }>());\r\nexport const fetchUserSuccess = createAction('[Github] Get User Success', props<{ user: IGithubUser }>());\r\nexport const fetchUserError = createAction('[Github] Get User Error');\r\n\r\nexport const fetchUsersRepos = createAction('[Github] Get User`s repositories', props<{ user: IGithubUser }>());\r\nexport const fetchUsersReposSuccess = createAction('[Github] Get User`s repositories Success', props<{ repos: IGithubRepository[] }>());\r\nexport const fetchUsersReposError = createAction('[Github] Get User`s repositories Error');\r\n\r\nexport const fetchRepoBranches = createAction('[Github] Get Repo`s branches', props<{ repo: IGithubRepository }>());\r\nexport const fetchRepoBranchesSuccess = createAction(\r\n  '[Github] Get Repo`s branches Success',\r\n  props<{ branches: IGithubBranch[], repo: IGithubRepository }>()\r\n);\r\nexport const fetchRepoBranchesError = createAction('[Github] Get Repo`s branches Error');\r\n\r\nexport const GithubActions = {\r\n  User: {\r\n    Load: {\r\n      Success: fetchUserSuccess,\r\n      Error: fetchUserError,\r\n      Fetch: fetchUser,\r\n    },\r\n    Repos: {\r\n      Success: fetchUsersReposSuccess,\r\n      Error: fetchUsersReposError,\r\n      Fetch: fetchUsersRepos,\r\n      Branches: {\r\n        Fetch: fetchRepoBranches,\r\n        Success: fetchRepoBranchesSuccess,\r\n        Error: fetchRepoBranchesError,\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Injectable }                                from '@angular/core';\r\nimport { Actions, createEffect, ofType }             from '@ngrx/effects';\r\nimport { Store }                                     from '@ngrx/store';\r\nimport { of, throwError }                                       from 'rxjs';\r\nimport { map, mergeMap, catchError, withLatestFrom, concatMap } from 'rxjs/operators';\r\nimport { IGithubUser }                                          from '../../Models';\r\nimport { GithubService }                             from '../../Services/Github.service';\r\nimport {\r\n  fetchUser,\r\n  fetchUserError,\r\n  fetchUsersRepos,\r\n  fetchUsersReposError,\r\n  fetchUsersReposSuccess,\r\n  fetchUserSuccess, GithubActions\r\n} from '../Actions/Github.actions';\r\nimport { GithubState } from '../Reducers/Github.store';\r\n\r\n@Injectable()\r\nexport class GithubEffects {\r\n\r\n  fetchGithubUser = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(fetchUser),\r\n      mergeMap((action) => this.githubService.getUser(action.username)\r\n        .pipe(\r\n          map(user => fetchUserSuccess({user})),\r\n          catchError(() => of(fetchUserError))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  fetchGithubUsersRepos = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(fetchUsersRepos),\r\n      mergeMap((action) => this.githubService.getUsersRepositories(action.user)\r\n        .pipe(\r\n          map(repos => fetchUsersReposSuccess({repos})),\r\n          catchError(() => of(fetchUsersReposError))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  fetchGithubUsersReposBranches = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(GithubActions.User.Repos.Branches.Fetch),\r\n      concatMap((action) => this.githubService.getRepoBranches(action.repo)\r\n        .pipe(\r\n          map((branches) => GithubActions.User.Repos.Branches.Success({branches, repo: action.repo})),\r\n          catchError(() => of(GithubActions.User.Repos.Branches.Error))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private githubService: GithubService,\r\n    private store: Store<GithubState>\r\n  ) {}\r\n}\r\n","import { EntityState, EntityMap, createEntityAdapter }                                            from '@ngrx/entity';\r\nimport { EntityAdapter }                                                                          from '@ngrx/entity/src/models';\r\nimport { CommonStoreStatus, CommonStoreStatusInit, onErrorState, onLoadingState, onSuccessState } from '../../../../lib/Store/Common';\r\nimport { IGithubRepository, IGithubUser }                                                         from '../../Models';\r\nimport { IGithubBranch }                                                                          from '../../Models/IGithubBranch';\r\n\r\nexport const githubFeatureKey = 'github';\r\n\r\ninterface IRepositoryData {\r\n  data: IGithubRepository;\r\n  branches: {\r\n    data: EntityState<IGithubBranch>,\r\n    status: CommonStoreStatus,\r\n  };\r\n}\r\n\r\nexport const repositoryAdapter = createEntityAdapter<IRepositoryData>({\r\n  selectId: model => model.data.node_id,\r\n});\r\n\r\nexport const branchAdapter = createEntityAdapter<IGithubBranch>({\r\n  selectId: model => model.name,\r\n});\r\n\r\nexport interface GithubState {\r\n  user: {\r\n    data: IGithubUser,\r\n    status: CommonStoreStatus,\r\n    repos: {\r\n      data: EntityState<IRepositoryData>,\r\n      status: CommonStoreStatus\r\n    },\r\n  };\r\n}\r\n\r\nexport const initialGithubState: GithubState = {\r\n  user: {\r\n    data: null,\r\n    status: CommonStoreStatusInit,\r\n    repos: {\r\n      data: repositoryAdapter.getInitialState(),\r\n      status: CommonStoreStatusInit\r\n    },\r\n  }\r\n};\r\n\r\n\r\n","import { createReducer, on }                            from '@ngrx/store';\r\nimport { onErrorState, onLoadingState, onSuccessState, CommonStoreStatusInit } from '../../../../lib/Store/Common';\r\nimport {\r\n  fetchRepoBranchesSuccess,\r\n  fetchUser,\r\n  fetchUserError,\r\n  fetchUsersRepos,\r\n  fetchUsersReposError,\r\n  fetchUsersReposSuccess,\r\n  fetchUserSuccess\r\n}                                                               from '../Actions/Github.actions';\r\nimport { branchAdapter, initialGithubState, repositoryAdapter } from './Github.store';\r\n\r\nexport const GithubUserReducer = createReducer(initialGithubState,\r\n  on(fetchUser, state => ({\r\n    user: {\r\n      ...state.user,\r\n      data: null,\r\n      status: {\r\n        ...onLoadingState\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUserSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      data: action.user,\r\n      status: {\r\n        ...onSuccessState\r\n      },\r\n    }\r\n  })),\r\n  on(fetchUserError, state => ({\r\n    user: {\r\n      ...state.user,\r\n      data: null,\r\n      status: {\r\n        ...onErrorState\r\n      },\r\n    }\r\n  })),\r\n  on(fetchUsersRepos, state => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.getInitialState(),\r\n        status: {\r\n          ...onLoadingState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUsersReposSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.setAll(action.repos.map(repo => ({\r\n          data: repo,\r\n          branches: {\r\n            data: branchAdapter.getInitialState(),\r\n            status: {...CommonStoreStatusInit}\r\n          },\r\n        })), state.user.repos.data),\r\n        status: {\r\n          ...onSuccessState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUsersReposError, state => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.getInitialState(),\r\n        status: {\r\n          ...onErrorState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchRepoBranchesSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        ...state.user.repos,\r\n        data: repositoryAdapter.updateOne({\r\n          id: action.repo.node_id,\r\n          changes: {\r\n            branches: {\r\n              data: branchAdapter.setAll(action.branches, state.user.repos.data.entities[action.repo.node_id].branches.data),\r\n              status: {\r\n                ...onSuccessState\r\n              },\r\n            }\r\n          }\r\n        }, state.user.repos.data)\r\n      }\r\n    }\r\n  }))\r\n);\r\n\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { GithubState, githubFeatureKey }         from '../Reducers/Github.store';\r\n\r\n\r\nexport const githubState = createFeatureSelector<GithubState>(githubFeatureKey);\r\n\r\nconst getUser = createSelector(githubState, (state) => state.user.data);\r\nconst getUserStatus = createSelector(githubState, (state) => state.user.status);\r\nconst getRepos = createSelector(githubState, (state) => state.user.repos.data.entities);\r\nconst getReposStatus = createSelector(githubState, (state) => state.user.repos.status);\r\nconst getReposBranches = createSelector(\r\n  githubState,\r\n  (state: GithubState, props: {repoId: string}) => {\r\n    return state.user.repos.data.entities[props.repoId]?.branches.data.entities;\r\n  }\r\n);\r\n\r\nexport const GithubSelectos = {\r\n  getUser,\r\n  getUserStatus,\r\n  getRepos,\r\n  getReposStatus,\r\n  getReposBranches\r\n};\r\n","export { GithubModule } from './Github.module';\r\n","import { Component, OnDestroy, OnInit }       from '@angular/core';\nimport { Router }                from '@angular/router';\nimport { select, Store }         from '@ngrx/store';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { GithubState }                        from '../../GithubModue/Store/Reducers/Github.store';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: [ './header.component.sass' ]\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  public searchPhrase: string = '';\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription$: Subscription;\n\n  constructor(private store: Store<GithubState>, private router: Router) {\n  }\n\n  public ngOnInit(): void {\n    this.searchSubscription$ = this.searchSubject.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n    ).subscribe(username => {\n      this.router.navigate([ 'user', username ]);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.searchSubscription$) {\n      this.searchSubscription$.unsubscribe();\n    }\n  }\n\n  public searchChangeHandler(): void {\n    this.searchSubject.next(this.searchPhrase);\n  }\n}\n","<header class=\"header\">\n  <div class=\"container header-content\">\n    <div class=\"brand\">Github search</div>\n    <div class=\"search\">\n      <input type=\"search\"\n         class=\"search-input\"\n         placeholder=\"Github login\"\n         [(ngModel)]=\"searchPhrase\"\n         (change)=\"searchChangeHandler()\"\n      />\n    </div>\n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.sass']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"layout\">\n  <app-header></app-header>\n  <div class=\"layout-content container\">\n    <ng-content></ng-content>\n  </div>\n  <footer class=\"footer\">\n    <div class=\"container\">\n      Github app with way more code than asked for created by Marcin Labryga &copy; 2020\n    </div>\n  </footer>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { select, Store }            from '@ngrx/store';\nimport { Observable }               from 'rxjs';\nimport { map }                      from 'rxjs/operators';\nimport { IGithubRepository }        from '../../../../GithubModue/Models';\nimport { IGithubBranch }            from '../../../../GithubModue/Models/IGithubBranch';\nimport { GithubActions }            from '../../../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }           from '../../../../GithubModue/Store/Selectors/github.selectors';\n\n@Component({\n  selector: 'repo-tile',\n  templateUrl: './repo-tile.component.html',\n  styleUrls: [ './repo-tile.component.sass' ],\n\n})\nexport class RepoTileComponent implements OnInit {\n\n  @Input() public repo: IGithubRepository;\n  public branches$: Observable<IGithubBranch[]>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n\n    if (this.repo) {\n      this.store.dispatch(GithubActions.User.Repos.Branches.Fetch({ repo: this.repo }));\n    }\n\n    this.branches$ = this.store\n      .pipe(\n        select(GithubSelectos.getReposBranches, {repoId: this.repo.node_id}),\n        map(res => Object.values(res))\n      );\n  }\n\n}\n","<h3 class=\"repo-name\">{{ repo.name }}</h3>\n<p>{{ repo.description || \"No description\" }}</p>\n<div><b>Owner:</b> {{ repo.owner.login }}</div>\n<div *ngIf=\"branches$ | async as branches\">\n  <hr>\n  <h3>Branches: </h3>\n  <div *ngFor=\"let branch of branches\">\n    <b>{{ branch.name }}</b>\n    <div *ngIf=\"branch.commit\">&nbsp;{{ branch.commit.sha }}</div>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store }                       from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { CommonStoreStatus }        from '../../../../../lib/Store/Common';\nimport { IGithubRepository, IGithubUser } from '../../../../GithubModue/Models';\nimport { GithubActions }                  from '../../../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }                 from '../../../../GithubModue/Store/Selectors/github.selectors';\n\n@Component({\n  selector: 'app-repos-list',\n  templateUrl: './repos-list.component.html',\n  styleUrls: [ './repos-list.component.sass' ]\n})\nexport class ReposListComponent implements OnInit, OnDestroy {\n\n  public reposStatus$: Observable<CommonStoreStatus>;\n  private repos$: Subscription;\n  public  repos: IGithubRepository[];\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.reposStatus$ = this.store.pipe(select(GithubSelectos.getReposStatus));\n    this.repos$ = this.store.pipe(select(GithubSelectos.getRepos))\n      .subscribe(res => {\n        this.repos = Object.values(res)\n          .map(reso => reso.data)\n          .filter(reso => reso.fork !== true);\n      });\n\n    this.store.pipe(select(GithubSelectos.getUser)).subscribe(user => {\n      if (user !== null) {\n        this.store.dispatch(GithubActions.User.Repos.Fetch({ user }));\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.repos$) {\n      this.repos$.unsubscribe();\n    }\n  }\n\n}\n","<h2>Repositories:</h2>\n\n<div *ngIf=\"reposStatus$ | async as status\">\n  <span *ngIf=\"status.loading\">Loading ...</span>\n  <span *ngIf=\"status.error\">\n    {{status.errorMessage || \"Error\"}}\n  </span>\n\n  <div *ngIf=\"status.loaded && repos.length > 0\" class=\"repo-list\">\n    <repo-tile *ngFor=\"let repo of repos\" [repo]=\"repo\"></repo-tile>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store }     from '@ngrx/store';\nimport { Observable }        from 'rxjs';\nimport { CommonStoreStatus } from '../../../lib/Store/Common';\nimport { IGithubUser }       from '../../GithubModue/Models';\nimport { GithubActions }     from '../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }    from '../../GithubModue/Store/Selectors/github.selectors';\nimport { selectRouteParam }  from 'src/app/router.selectors';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: [ './user-page.component.sass' ]\n})\nexport class UserPageComponent implements OnInit {\n\n  public user$: Observable<IGithubUser>;\n  public userStatus$: Observable<CommonStoreStatus>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit(): void {\n\n    this.store.pipe(select(selectRouteParam('username'))).subscribe(username => {\n      this.store.dispatch(GithubActions.User.Load.Fetch({ username }));\n    });\n\n    this.user$ = this.store.pipe(select(GithubSelectos.getUser));\n\n    this.userStatus$ = this.store.pipe(select(GithubSelectos.getUserStatus));\n    ;\n  }\n}\n\n","<div *ngIf=\"userStatus$ | async as status\">\n  <span *ngIf=\"status.loading\">Loading ...</span>\n  <span *ngIf=\"status.error\">\n    {{status.errorMessage || \"Error\"}}\n  </span>\n\n  <div *ngIf=\"status.loaded && user$ | async as user\">\n    <div class=\"user\">\n      <img [src]=\"user.avatar_url\" [alt]=\"user.login\" class=\"avatar\">\n      <div class=\"data\">\n        <h3>{{ user.name }}</h3>\n        <div>\n          <div><b>location:&nbsp;</b>{{ user.location }}</div>\n          <div><b>company:&nbsp;</b>{{ user.company }}</div>\n          <div><b>blog:&nbsp;</b><a [href]=\"user.blog\">{{user.blog}}</a></div>\n        </div>\n      </div>\n    </div>\n\n    <app-repos-list></app-repos-list>\n  </div>\n</div>\n","import { NgModule }             from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPageComponent }    from './Pages/user-page/user-page.component';\n\nconst routes: Routes = [\n  {\n    path: 'user/:username',\n    component: UserPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit }                          from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.sass' ]\n})\nexport class AppComponent {\n\n}\n","\n<app-layout>\n  <h1>Ngrx Github App</h1>\n  <router-outlet></router-outlet>\n</app-layout>\n\n","import { FormsModule }                 from '@angular/forms';\nimport { BrowserModule }               from '@angular/platform-browser';\nimport { NgModule }                                   from '@angular/core';\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\n\nimport { AppRoutingModule }         from './app-routing.module';\nimport { AppComponent }             from './app.component';\nimport { StoreDevtoolsModule }      from '@ngrx/store-devtools';\nimport { environment }              from '../environments/environment';\nimport { MetaReducer, StoreModule } from '@ngrx/store';\nimport { EffectsModule }            from '@ngrx/effects';\nimport { ServiceWorkerModule }      from '@angular/service-worker';\nimport { GithubModule }             from './GithubModue';\nimport { HeaderComponent }          from './Layout/header/header.component';\nimport { LayoutComponent }          from './Layout/layout/layout.component';\nimport { UserPageComponent } from './Pages/user-page/user-page.component';\nimport { ReposListComponent } from './Pages/user-page/Components/repos-list/repos-list.component';\nimport { RepoTileComponent } from './Pages/user-page/Components/repo-tile/repo-tile.component';\n\nexport const metaReducers: MetaReducer<{}>[] = !environment.production ? [] : [];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LayoutComponent,\n    UserPageComponent,\n    ReposListComponent,\n    RepoTileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    StoreModule.forRoot({\n      router: routerReducer,\n    }, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      }\n    }),\n    EffectsModule.forRoot([]),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule,\n    StoreRouterConnectingModule.forRoot(),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    GithubModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import * as fromRouter                           from '@ngrx/router-store';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport interface State {\r\n  router: fromRouter.RouterReducerState<fromRouter.MinimalRouterStateSnapshot>;\r\n}\r\n\r\nexport const selectRouter = createFeatureSelector<State,\r\n  fromRouter.RouterReducerState<fromRouter.MinimalRouterStateSnapshot>>('router');\r\n\r\nconst selectors = fromRouter.getSelectors(selectRouter);\r\n\r\n/**\r\n * select the current route\r\n * (custom implementation for better typings)\r\n */\r\nexport const selectCurrentRoute = createSelector(selectRouter, state => state.state.root);\r\n\r\nexport const {\r\n  selectQueryParams,\r\n  selectQueryParam,\r\n  selectRouteParams,\r\n  selectRouteParam,\r\n  selectRouteData,\r\n  selectUrl\r\n} = selectors;\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export interface CommonStoreStatus {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport const CommonStoreStatusInit: CommonStoreStatus = {\r\n  loading: true,\r\n  loaded: false,\r\n  error: false,\r\n  errorMessage: null\r\n};\r\n\r\nexport const onLoadingState: CommonStoreStatus = {\r\n  loading: true,\r\n  loaded: false,\r\n  error: false,\r\n};\r\nexport const onErrorState: CommonStoreStatus = {\r\n  loading: false,\r\n  loaded: false,\r\n  error: true,\r\n};\r\nexport const onSuccessState: CommonStoreStatus = {\r\n  loading: false,\r\n  loaded: true,\r\n  error: false,\r\n  errorMessage: null,\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}