{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/GithubModue/Github.module.ts","webpack:///src/app/GithubModue/Services/Github.service.ts","webpack:///src/app/GithubModue/Store/Actions/Github.actions.ts","webpack:///src/app/GithubModue/Store/Effects/Github.effects.ts","webpack:///src/app/GithubModue/Store/Reducers/Github.store.ts","webpack:///src/app/GithubModue/Store/Reducers/GithubUser.reducer.ts","webpack:///src/app/GithubModue/Store/Selectors/github.selectors.ts","webpack:///src/app/GithubModue/index.ts","webpack:///src/app/Layout/header/header.component.ts","webpack:///src/app/Layout/header/header.component.html","webpack:///src/app/Layout/layout/layout.component.ts","webpack:///src/app/Layout/layout/layout.component.html","webpack:///src/app/Pages/user-page/Components/repo-tile/repo-tile.component.ts","webpack:///src/app/Pages/user-page/Components/repo-tile/repo-tile.component.html","webpack:///src/app/Pages/user-page/Components/repos-list/repos-list.component.ts","webpack:///src/app/Pages/user-page/Components/repos-list/repos-list.component.html","webpack:///src/app/Pages/user-page/user-page.component.ts","webpack:///src/app/Pages/user-page/user-page.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/router.selectors.ts","webpack:///src/environments/environment.ts","webpack:///src/lib/Store/Common.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","GithubModule","forFeature","declarations","imports","providers","bootstrap","GithubService","http","baseUrl","url","replace","username","get","headers","pipe","user","repos_url","repo","parseUrl","branches_url","Authorization","fetchUser","fetchUserSuccess","fetchUserError","fetchUsersRepos","fetchUsersReposSuccess","fetchUsersReposError","fetchRepoBranches","fetchRepoBranchesSuccess","fetchRepoBranchesError","GithubActions","User","Load","Success","Fetch","Repos","Branches","GithubEffects","actions$","githubService","store","fetchGithubUser","action","getUser","fetchGithubUsersRepos","getUsersRepositories","repos","fetchGithubUsersReposBranches","getRepoBranches","branches","githubFeatureKey","repositoryAdapter","selectId","model","data","node_id","branchAdapter","name","initialGithubState","status","getInitialState","GithubUserReducer","state","setAll","map","updateOne","changes","entities","githubState","getUserStatus","getRepos","getReposStatus","getReposBranches","props","repoId","GithubSelectos","HeaderComponent","router","searchPhrase","searchSubject","searchSubscription$","subscribe","navigate","unsubscribe","next","searchChangeHandler","selector","templateUrl","styleUrls","LayoutComponent","RepoTileComponent","dispatch","branches$","res","Object","values","ReposListComponent","reposStatus$","repos$","reso","filter","fork","UserPageComponent","user$","userStatus$","routes","path","component","AppRoutingModule","forRoot","AppComponent","metaReducers","production","AppModule","runtimeChecks","strictStateImmutability","strictActionImmutability","register","enabled","instrument","selectRouter","selectors","selectCurrentRoute","root","selectQueryParams","selectQueryParam","selectRouteParams","selectRouteParam","selectRouteData","selectUrl","environment","CommonStoreStatusInit","loading","loaded","error","errorMessage","onLoadingState","onErrorState","onSuccessState","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,iBAHZ,CAAE,sEAAF,C;AAAiB,gBALnB,CACP,qEADO,EAEP,4DAAcC,UAAd,CAAyB,CAAE,2EAAF,CAAzB,CAFO,EAGP,wDAAYA,UAAZ,CAAuB,6EAAvB,EAAyC,oFAAzC,CAHO,CAKmB;;;;0HAGjBD,Y,EAAY;AAAA,kBAPrB,qEAOqB,EAPL,kEAOK,EAPL,8DAOK;AAAA,O;AAPL,K;;;;;sEAOPA,Y,EAAY;cAVxB,sDAUwB;eAVf;AACRE,sBAAY,EAAE,EADN;AAERC,iBAAO,EAAE,CACP,qEADO,EAEP,4DAAcF,UAAd,CAAyB,CAAE,2EAAF,CAAzB,CAFO,EAGP,wDAAYA,UAAZ,CAAuB,6EAAvB,EAAyC,oFAAzC,CAHO,CAFD;AAORG,mBAAS,EAAE,CAAE,sEAAF,CAPH;AAQRC,mBAAS,EAAE;AARH,S;AAUe,Q;;;;;;;;;;;;;;;;;;AClBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,a;AAIX,6BACSC,IADT,EACyB;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHF,aAAAC,OAAA,GAAkB,wBAAlB;AAKN;;;;iCAEgBC,G,EAAa;AAC5B,iBAAOA,GAAG,CAACC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAP;AACD;;;gCAScC,Q,EAAgB;AAC7B,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,WAA+B,KAAKJ,OAApC,oBAAuDG,QAAvD,GAAoE;AACzEE,mBAAO,EAAE,KAAKA;AAD2D,WAApE,EAEJC,IAFI,CAGL,kEAAW;AAAA,mBAAM,gDAAG,IAAH,CAAN;AAAA,WAAX,CAHK,CAAP;AAKD;;;6CAE2BC,I,EAAiB;AAC3C,iBAAO,KAAKR,IAAL,CAAUK,GAAV,CAAmCG,IAAI,CAACC,SAAxC,EAAmD;AACxDH,mBAAO,EAAE,KAAKA;AAD0C,WAAnD,EAEJC,IAFI,CAGL,kEAAW;AAAA,mBAAM,gDAAG,EAAH,CAAN;AAAA,WAAX,CAHK,CAAP;AAKD;;;wCAEsBG,I,EAAuB;AAC5C,iBAAO,KAAKV,IAAL,CAAUK,GAAV,CAA+B,KAAKM,QAAL,CAAcD,IAAI,CAACE,YAAnB,CAA/B,EAAiE;AACtEN,mBAAO,EAAE,KAAKA;AADwD,WAAjE,EAEJC,IAFI,CAGL,kEAAW;AAAA,mBAAM,gDAAG,EAAH,CAAN;AAAA,WAAX,CAHK,CAAP;AAKD;;;4BA7BqB;AACpB,iBAAO;AACL,4BAAgB,kBADX;AAELM,yBAAa,EAAE;AAFV,WAAP;AAID;;;;;;;uBAlBUd,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMe,SAAS,GAAG,iEAAa,mBAAb,EAAkC,2DAAlC,CAAlB;AACA,QAAMC,gBAAgB,GAAG,iEAAa,2BAAb,EAA0C,2DAA1C,CAAzB;AACA,QAAMC,cAAc,GAAG,iEAAa,yBAAb,CAAvB;AAEA,QAAMC,eAAe,GAAG,iEAAa,kCAAb,EAAiD,2DAAjD,CAAxB;AACA,QAAMC,sBAAsB,GAAG,iEAAa,0CAAb,EAAyD,2DAAzD,CAA/B;AACA,QAAMC,oBAAoB,GAAG,iEAAa,wCAAb,CAA7B;AAEA,QAAMC,iBAAiB,GAAG,iEAAa,8BAAb,EAA6C,2DAA7C,CAA1B;AACA,QAAMC,wBAAwB,GAAG,iEACtC,sCADsC,EAEtC,2DAFsC,CAAjC;AAIA,QAAMC,sBAAsB,GAAG,iEAAa,oCAAb,CAA/B;AAEA,QAAMC,aAAa,GAAG;AAC3BC,UAAI,EAAE;AACJC,YAAI,EAAE;AACJC,iBAAO,EAAEX,gBADL;AAEJ5B,eAAK,EAAE6B,cAFH;AAGJW,eAAK,EAAEb;AAHH,SADF;AAMJc,aAAK,EAAE;AACLF,iBAAO,EAAER,sBADJ;AAEL/B,eAAK,EAAEgC,oBAFF;AAGLQ,eAAK,EAAEV,eAHF;AAILY,kBAAQ,EAAE;AACRF,iBAAK,EAAEP,iBADC;AAERM,mBAAO,EAAEL,wBAFD;AAGRlC,iBAAK,EAAEmC;AAHC;AAJL;AANH;AADqB,KAAtB;;;;;;;;;;;;;;;;ACnBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaQ,a,GAsCX,uBACUC,QADV,EAEUC,aAFV,EAGUC,KAHV,EAGmC;AAAA;;AAAA;;AAFzB,WAAAF,QAAA,GAAAA,QAAA;AACA,WAAAC,aAAA,GAAAA,aAAA;AACA,WAAAC,KAAA,GAAAA,KAAA;AAvCV,WAAAC,eAAA,GAAkB,mEAAa;AAAA,eAC7B,KAAI,CAACH,QAAL,CAAcxB,IAAd,CACE,6DAAO,iEAAP,CADF,EAEE,gEAAS,UAAC4B,MAAD;AAAA,iBAAY,KAAI,CAACH,aAAL,CAAmBI,OAAnB,CAA2BD,MAAM,CAAC/B,QAAlC,EAClBG,IADkB,CAEjB,2DAAI,UAAAC,IAAI;AAAA,mBAAI,iFAAiB;AAACA,kBAAI,EAAJA;AAAD,aAAjB,CAAJ;AAAA,WAAR,CAFiB,EAGjB,kEAAW;AAAA,mBAAM,gDAAG,sEAAH,CAAN;AAAA,WAAX,CAHiB,CAAZ;AAAA,SAAT,CAFF,CAD6B;AAAA,OAAb,CAAlB;AAYA,WAAA6B,qBAAA,GAAwB,mEAAa;AAAA,eACnC,KAAI,CAACN,QAAL,CAAcxB,IAAd,CACE,6DAAO,uEAAP,CADF,EAEE,gEAAS,UAAC4B,MAAD;AAAA,iBAAY,KAAI,CAACH,aAAL,CAAmBM,oBAAnB,CAAwCH,MAAM,CAAC3B,IAA/C,EAClBD,IADkB,CAEjB,2DAAI,UAAAgC,KAAK;AAAA,mBAAI,uFAAuB;AAACA,mBAAK,EAALA;AAAD,aAAvB,CAAJ;AAAA,WAAT,CAFiB,EAGjB,kEAAW;AAAA,mBAAM,gDAAG,4EAAH,CAAN;AAAA,WAAX,CAHiB,CAAZ;AAAA,SAAT,CAFF,CADmC;AAAA,OAAb,CAAxB;AAYA,WAAAC,6BAAA,GAAgC,mEAAa;AAAA,eAC3C,KAAI,CAACT,QAAL,CAAcxB,IAAd,CACE,6DAAO,sEAAciB,IAAd,CAAmBI,KAAnB,CAAyBC,QAAzB,CAAkCF,KAAzC,CADF,EAEE,iEAAU,UAACQ,MAAD;AAAA,iBAAY,KAAI,CAACH,aAAL,CAAmBS,eAAnB,CAAmCN,MAAM,CAACzB,IAA1C,EACnBH,IADmB,CAElB,2DAAI,UAACmC,QAAD;AAAA,mBAAc,sEAAclB,IAAd,CAAmBI,KAAnB,CAAyBC,QAAzB,CAAkCH,OAAlC,CAA0C;AAACgB,sBAAQ,EAARA,QAAD;AAAWhC,kBAAI,EAAEyB,MAAM,CAACzB;AAAxB,aAA1C,CAAd;AAAA,WAAJ,CAFkB,EAGlB,kEAAW;AAAA,mBAAM,gDAAG,sEAAcc,IAAd,CAAmBI,KAAnB,CAAyBC,QAAzB,CAAkC1C,KAArC,CAAN;AAAA,WAAX,CAHkB,CAAZ;AAAA,SAAV,CAFF,CAD2C;AAAA,OAAb,CAAhC;AAgBI,K;;;uBA1CO2C,a,EAAa,6G,EAAA,8H,EAAA,yG;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AClB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMO,QAAMa,gBAAgB,GAAG,QAAzB;AAUA,QAAMC,iBAAiB,GAAG,yEAAqC;AACpEC,cAAQ,EAAE,kBAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,IAAN,CAAWC,OAAf;AAAA;AADqD,KAArC,CAA1B;AAIA,QAAMC,aAAa,GAAG,yEAAmC;AAC9DJ,cAAQ,EAAE,kBAAAC,KAAK;AAAA,eAAIA,KAAK,CAACI,IAAV;AAAA;AAD+C,KAAnC,CAAtB;AAeA,QAAMC,kBAAkB,GAAgB;AAC7C3C,UAAI,EAAE;AACJuC,YAAI,EAAE,IADF;AAEJK,cAAM,EAAE,uEAFJ;AAGJb,aAAK,EAAE;AACLQ,cAAI,EAAEH,iBAAiB,CAACS,eAAlB,EADD;AAELD,gBAAM,EAAE;AAFH;AAHH;AADuC,KAAxC;;;;;;;;;;;;;;;;ACnCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaO,QAAME,iBAAiB,GAAG,kEAAc,gEAAd,EAC/B,uDAAG,iEAAH,EAAc,UAAAC,KAAK;AAAA,aAAK;AACtB/C,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACbuC,cAAI,EAAE,IADO;AAEbK,gBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,gEADG;AAFK,SADT;AADgB,OAAL;AAAA,KAAnB,CAD+B,EAU/B,uDAAG,wEAAH,EAAqB,UAACG,KAAD,EAAQpB,MAAR;AAAA,aAAoB;AACvC3B,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACbuC,cAAI,EAAEZ,MAAM,CAAC3B,IADA;AAEb4C,gBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,gEADG;AAFK,SADT;AADiC,OAApB;AAAA,KAArB,CAV+B,EAmB/B,uDAAG,sEAAH,EAAmB,UAAAG,KAAK;AAAA,aAAK;AAC3B/C,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACbuC,cAAI,EAAE,IADO;AAEbK,gBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,8DADG;AAFK,SADT;AADqB,OAAL;AAAA,KAAxB,CAnB+B,EA4B/B,uDAAG,uEAAH,EAAoB,UAAAG,KAAK;AAAA,aAAK;AAC5B/C,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACb+B,eAAK,EAAE;AACLQ,gBAAI,EAAE,gEAAkBM,eAAlB,EADD;AAELD,kBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,gEADG;AAFH;AADM,SADT;AADsB,OAAL;AAAA,KAAzB,CA5B+B,EAuC/B,uDAAG,8EAAH,EAA2B,UAACG,KAAD,EAAQpB,MAAR;AAAA,aAAoB;AAC7C3B,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACb+B,eAAK,EAAE;AACLQ,gBAAI,EAAE,gEAAkBS,MAAlB,CAAyBrB,MAAM,CAACI,KAAP,CAAakB,GAAb,CAAiB,UAAA/C,IAAI;AAAA,qBAAK;AACvDqC,oBAAI,EAAErC,IADiD;AAEvDgC,wBAAQ,EAAE;AACRK,sBAAI,EAAE,4DAAcM,eAAd,EADE;AAERD,wBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EAAI,uEAAJ;AAFA;AAF6C,eAAL;AAAA,aAArB,CAAzB,EAMDG,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBQ,IANhB,CADD;AAQLK,kBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,gEADG;AARH;AADM,SADT;AADuC,OAApB;AAAA,KAA3B,CAvC+B,EAwD/B,uDAAG,4EAAH,EAAyB,UAAAG,KAAK;AAAA,aAAK;AACjC/C,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACb+B,eAAK,EAAE;AACLQ,gBAAI,EAAE,gEAAkBM,eAAlB,EADD;AAELD,kBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,8DADG;AAFH;AADM,SADT;AAD2B,OAAL;AAAA,KAA9B,CAxD+B,EAmE/B,uDAAG,gFAAH,EAA6B,UAACG,KAAD,EAAQpB,MAAR;AAAA,aAAoB;AAC/C3B,YAAI,EAAE,MAAF,OAAE,CAAF,kBACC+C,KAAK,CAAC/C,IADP,CAAE,EACS;AACb+B,eAAK,EAAE,MAAF,OAAE,CAAF,kBACAgB,KAAK,CAAC/C,IAAN,CAAW+B,KADX,CAAE,EACc;AACnBQ,gBAAI,EAAE,gEAAkBW,SAAlB,CAA4B;AAChClE,gBAAE,EAAE2C,MAAM,CAACzB,IAAP,CAAYsC,OADgB;AAEhCW,qBAAO,EAAE;AACPjB,wBAAQ,EAAE;AACRK,sBAAI,EAAE,4DAAcS,MAAd,CAAqBrB,MAAM,CAACO,QAA5B,EAAsCa,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBQ,IAAjB,CAAsBa,QAAtB,CAA+BzB,MAAM,CAACzB,IAAP,CAAYsC,OAA3C,EAAoDN,QAApD,CAA6DK,IAAnG,CADE;AAERK,wBAAM,EAAE,MAAF,OAAE,CAAF,EAAE,EACH,gEADG;AAFA;AADH;AAFuB,aAA5B,EAUHG,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBQ,IAVd;AADa,WADd;AADM,SADT;AADyC,OAApB;AAAA,KAA7B,CAnE+B,CAA1B;;;;;;;;;;;;;;;;ACbP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMc,WAAW,GAAG,0EAAmC,uEAAnC,CAApB;AAEP,QAAMzB,OAAO,GAAG,mEAAeyB,WAAf,EAA4B,UAACN,KAAD;AAAA,aAAWA,KAAK,CAAC/C,IAAN,CAAWuC,IAAtB;AAAA,KAA5B,CAAhB;AACA,QAAMe,aAAa,GAAG,mEAAeD,WAAf,EAA4B,UAACN,KAAD;AAAA,aAAWA,KAAK,CAAC/C,IAAN,CAAW4C,MAAtB;AAAA,KAA5B,CAAtB;AACA,QAAMW,QAAQ,GAAG,mEAAeF,WAAf,EAA4B,UAACN,KAAD;AAAA,aAAWA,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBQ,IAAjB,CAAsBa,QAAjC;AAAA,KAA5B,CAAjB;AACA,QAAMI,cAAc,GAAG,mEAAeH,WAAf,EAA4B,UAACN,KAAD;AAAA,aAAWA,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBa,MAA5B;AAAA,KAA5B,CAAvB;AACA,QAAMa,gBAAgB,GAAG,mEACvBJ,WADuB,EAEvB,UAACN,KAAD,EAAqBW,KAArB,EAAiD;;;AAC/C,aAAO,CAAP,KAAOX,KAAK,CAAC/C,IAAN,CAAW+B,KAAX,CAAiBQ,IAAjB,CAAsBa,QAAtB,CAA+BM,KAAK,CAACC,MAArC,OAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEzB,QAAF,CAAWK,IAAX,CAAgBa,QAAnE;AACD,KAJsB,CAAzB;AAOO,QAAMQ,cAAc,GAAG;AAC5BhC,aAAO,EAAPA,OAD4B;AAE5B0B,mBAAa,EAAbA,aAF4B;AAG5BC,cAAQ,EAARA,QAH4B;AAI5BC,oBAAc,EAAdA,cAJ4B;AAK5BC,sBAAgB,EAAhBA;AAL4B,KAAvB;;;;;;;;;;;;;;;;ACjBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaI,e;AAOX,+BAAoBpC,KAApB,EAAuDqC,MAAvD,EAAuE;AAAA;;AAAnD,aAAArC,KAAA,GAAAA,KAAA;AAAmC,aAAAqC,MAAA,GAAAA,MAAA;AALhD,aAAAC,YAAA,GAAuB,EAAvB;AAEC,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AAIP;;;;mCAEc;AAAA;;AACb,eAAKC,mBAAL,GAA2B,KAAKD,aAAL,CAAmBjE,IAAnB,CACzB,oEAAa,GAAb,CADyB,EAEzB,6EAFyB,EAGzBmE,SAHyB,CAGf,UAAAtE,QAAQ,EAAI;AACtB,kBAAI,CAACkE,MAAL,CAAYK,QAAZ,CAAqB,CAAE,MAAF,EAAUvE,QAAV,CAArB;AACD,WAL0B,CAA3B;AAMD;;;sCAEiB;AAChB,cAAI,KAAKqE,mBAAT,EAA8B;AAC5B,iBAAKA,mBAAL,CAAyBG,WAAzB;AACD;AACF;;;8CAEyB;AACxB,eAAKJ,aAAL,CAAmBK,IAAnB,CAAwB,KAAKN,YAA7B;AACD;;;;;;;uBA3BUF,e,EAAe,kH,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,6M;AAAA;AAAA;ACZ5B;;AACE;;AACE;;AAAmB;;AAAa;;AAChC;;AACE;;AAGG;AAAA;AAAA,aAA0B,QAA1B,EAA0B;AAAA,mBAChB,IAAAS,mBAAA,EADgB;AACK,WAD/B;;AAHH;;AAMF;;AACF;;AACF;;;;AALS;;AAAA;;;;;;;;;sEDKIT,e,EAAe;cAL3B,uDAK2B;eALjB;AACTU,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAE,yBAAF;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOaC,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,6B;AAAA,c;AAAA,a;AAAA,kG;AAAA;AAAA;;;ACP5B;;AACE;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;;;;sEDHaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTH,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQI;;AAA2B;;AAA6B;;;;;;AAA7B;;AAAA;;;;;;AAF7B;;AACE;;AAAG;;AAAiB;;AACpB;;AACF;;;;;;AAFK;;AAAA;;AACE;;AAAA;;;;;;AALT;;AACE;;AACA;;AAAI;;AAAU;;AACd;;AAIF;;;;;;AAJO;;AAAA;;;;QDSME,iB;AAKX,iCAAoBlD,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AACnB;;;;mCAEU;AAET,cAAI,KAAKvB,IAAT,EAAe;AACb,iBAAKuB,KAAL,CAAWmD,QAAX,CAAoB,wFAAc5D,IAAd,CAAmBI,KAAnB,CAAyBC,QAAzB,CAAkCF,KAAlC,CAAwC;AAAEjB,kBAAI,EAAE,KAAKA;AAAb,aAAxC,CAApB;AACD;;AAED,eAAK2E,SAAL,GAAiB,KAAKpD,KAAL,CACd1B,IADc,CAEb,2DAAO,6FAAe0D,gBAAtB,EAAwC;AAACE,kBAAM,EAAE,KAAKzD,IAAL,CAAUsC;AAAnB,WAAxC,CAFa,EAGb,2DAAI,UAAAsC,GAAG;AAAA,mBAAIC,MAAM,CAACC,MAAP,CAAcF,GAAd,CAAJ;AAAA,WAAP,CAHa,CAAjB;AAKD;;;;;;;uBAnBUH,iB,EAAiB,kH;AAAA,K;;;YAAjBA,iB;AAAiB,gC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,sE;AAAA;AAAA;ACf9B;;AAAsB;;AAAe;;AACrC;;AAAG;;AAA0C;;AAC7C;;AAAK;;AAAG;;AAAM;;AAAK;;AAAsB;;AACzC;;;;;;AAHsB;;AAAA;;AACnB;;AAAA;;AACgB;;AAAA;;AACd;;AAAA;;;;;;;;;;sEDYQA,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACTJ,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAE,4BAAF;AAHF,S;AAMmB,Q;;;;;;gBAE3B;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGE;;AAA6B;;AAAW;;;;;;AACxC;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAIA;;;;;;AAAsC;;;;;;AADxC;;AACE;;AACF;;;;;;AADa;;AAAA;;;;;;AAPf;;AACE;;AACA;;AAIA;;AAGF;;;;;;;;AARQ;;AAAA;;AACA;;AAAA;;AAID;;AAAA;;;;QDKMQ,kB;AAMX,kCAAoBxD,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AACnB;;;;mCAEU;AAAA;;AACT,eAAKyD,YAAL,GAAoB,KAAKzD,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,6FAAeyD,cAAtB,CAAhB,CAApB;AACA,eAAK2B,MAAL,GAAc,KAAK1D,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,6FAAewD,QAAtB,CAAhB,EACXW,SADW,CACD,UAAAY,GAAG,EAAI;AAChB,kBAAI,CAAC/C,KAAL,GAAagD,MAAM,CAACC,MAAP,CAAcF,GAAd,EACV7B,GADU,CACN,UAAAmC,IAAI;AAAA,qBAAIA,IAAI,CAAC7C,IAAT;AAAA,aADE,EAEV8C,MAFU,CAEH,UAAAD,IAAI;AAAA,qBAAIA,IAAI,CAACE,IAAL,KAAc,IAAlB;AAAA,aAFD,CAAb;AAGD,WALW,CAAd;AAOA,eAAK7D,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,6FAAe6B,OAAtB,CAAhB,EAAgDsC,SAAhD,CAA0D,UAAAlE,IAAI,EAAI;AAChE,gBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,oBAAI,CAACyB,KAAL,CAAWmD,QAAX,CAAoB,wFAAc5D,IAAd,CAAmBI,KAAnB,CAAyBD,KAAzB,CAA+B;AAAEnB,oBAAI,EAAJA;AAAF,eAA/B,CAApB;AACD;AACF,WAJD;AAKD;;;sCAEiB;AAChB,cAAI,KAAKmF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYf,WAAZ;AACD;AACF;;;;;;;uBA7BUa,kB,EAAkB,kH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,iI;AAAA;AAAA;ACb/B;;AAAI;;AAAa;;AAEjB;;;;;;AAAK;;AAAA;;;;;;;;;;sEDWQA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTV,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAE,6BAAF;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAA6B;;AAAW;;;;;;AACxC;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAGF;;AACE;;AACE;;AACA;;AACE;;AAAI;;AAAe;;AACnB;;AACE;;AAAK;;AAAG;;AAAe;;AAAI;;AAAmB;;AAC9C;;AAAK;;AAAG;;AAAc;;AAAI;;AAAkB;;AAC5C;;AAAK;;AAAG;;AAAW;;AAAI;;AAAsB;;AAAa;;AAAI;;AAChE;;AACF;;AACF;;AAEA;;AACF;;;;;;AAZS;;AAAA,yJAAuB,KAAvB,EAAuB,aAAvB;;AAEC;;AAAA;;AAEyB;;AAAA;;AACD;;AAAA;;AACA;;AAAA;;AAAmB;;AAAA;;;;;;AAdvD;;AACE;;AACA;;AAIA;;;;AAeF;;;;;;;;AApBQ;;AAAA;;AACA;;AAAA;;AAID;;AAAA;;;;QDQMc,iB;AAKX,iCAAoB9D,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AACnB;;;;mCAEO;AAAA;;AAEN,eAAKA,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,kFAAiB,UAAjB,CAAP,CAAhB,EAAsDmE,SAAtD,CAAgE,UAAAtE,QAAQ,EAAI;AAC1E,kBAAI,CAAC6B,KAAL,CAAWmD,QAAX,CAAoB,wFAAc5D,IAAd,CAAmBC,IAAnB,CAAwBE,KAAxB,CAA8B;AAAEvB,sBAAQ,EAARA;AAAF,aAA9B,CAApB;AACD,WAFD;AAIA,eAAK4F,KAAL,GAAa,KAAK/D,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,6FAAe6B,OAAtB,CAAhB,CAAb;AAEA,eAAK6D,WAAL,GAAmB,KAAKhE,KAAL,CAAW1B,IAAX,CAAgB,2DAAO,6FAAeuD,aAAtB,CAAhB,CAAnB;AACA;AACD;;;;;;;uBAlBUiC,iB,EAAiB,kH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,kG;AAAA;AAAA;ACd9B;;;;;;AAAK;;;;;;;;;;sEDcQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAE,4BAAF;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AEd9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMiB,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,gBADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRzG,iBAAO,EAAE,CAAC,6DAAa0G,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAER3G,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagH,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACNzB;;AACE;;AAAI;;AAAe;;AACnB;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTxB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAE,sBAAF;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAmBO,QAAMuB,YAAY,GAAsB,CAAC,sEAAYC,UAAb,GAA0B,EAA1B,GAA+B,EAAvE;;QAiCMC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAnBJ,CACP,uEADO,EAEP,0DAFO,EAGP,wDAAYJ,OAAZ,CAAoB;AAClBhC,cAAM,EAAE;AADU,OAApB,EAEG;AACDkC,oBAAY,EAAZA,YADC;AAEDG,qBAAa,EAAE;AACbC,iCAAuB,EAAE,IADZ;AAEbC,kCAAwB,EAAE;AAFb;AAFd,OAFH,CAHO,EAYP,4DAAcP,OAAd,CAAsB,EAAtB,CAZO,EAaP,6EAAoBQ,QAApB,CAA6B,gBAA7B,EAA+C;AAAEC,eAAO,EAAE,sEAAYN;AAAvB,OAA/C,CAbO,EAcP,oEAdO,EAeP,+EAA4BH,OAA5B,EAfO,EAgBP,CAAC,sEAAYG,UAAb,GAA0B,yEAAoBO,UAApB,EAA1B,GAA6D,EAhBtD,EAiBP,0DAjBO,CAmBI;;;;0HAGFN,S,EAAS;AAAA,uBA7BlB,2DA6BkB,EA5BlB,gFA4BkB,EA3BlB,gFA2BkB,EA1BlB,uFA0BkB,EAzBlB,+GAyBkB,EAxBlB,4GAwBkB;AAxBD,kBAGjB,uEAHiB,EAIjB,0DAJiB,EAIN,2DAJM,EAIN,+DAJM,EAIN,4EAJM,EAgBjB,oEAhBiB,EAgBD,8EAhBC,EAgBD,wEAhBC,EAmBjB,0DAnBiB;AAwBC,O;AALN,K;;;;;sEAKHA,S,EAAS;cA/BrB,sDA+BqB;eA/BZ;AACR/G,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,gFAHY,EAIZ,uFAJY,EAKZ,+GALY,EAMZ,4GANY,CADN;AASRC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,wDAAY0G,OAAZ,CAAoB;AAClBhC,kBAAM,EAAE;AADU,WAApB,EAEG;AACDkC,wBAAY,EAAZA,YADC;AAEDG,yBAAa,EAAE;AACbC,qCAAuB,EAAE,IADZ;AAEbC,sCAAwB,EAAE;AAFb;AAFd,WAFH,CAHO,EAYP,4DAAcP,OAAd,CAAsB,EAAtB,CAZO,EAaP,6EAAoBQ,QAApB,CAA6B,gBAA7B,EAA+C;AAAEC,mBAAO,EAAE,sEAAYN;AAAvB,WAA/C,CAbO,EAcP,oEAdO,EAeP,+EAA4BH,OAA5B,EAfO,EAgBP,CAAC,sEAAYG,UAAb,GAA0B,yEAAoBO,UAApB,EAA1B,GAA6D,EAhBtD,EAiBP,0DAjBO,CATD;AA4BRnH,mBAAS,EAAE,EA5BH;AA6BRC,mBAAS,EAAE,CAAC,2DAAD;AA7BH,S;AA+BY,Q;;;;;;;;;;;;;;;;;;ACpDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOO,QAAMmH,YAAY,GAAG,0EAC4C,QAD5C,CAArB;;AAGP,QAAMC,SAAS,GAAG,gEAAwBD,YAAxB,CAAlB;AAEA;;;;;;AAIO,QAAME,kBAAkB,GAAG,mEAAeF,YAAf,EAA6B,UAAA1D,KAAK;AAAA,aAAIA,KAAK,CAACA,KAAN,CAAY6D,IAAhB;AAAA,KAAlC,CAA3B;QAGLC,iB,GAMEH,S,CANFG,iB;QACAC,gB,GAKEJ,S,CALFI,gB;QACAC,iB,GAIEL,S,CAJFK,iB;QACAC,gB,GAGEN,S,CAHFM,gB;QACAC,e,GAEEP,S,CAFFO,e;QACAC,S,GACER,S,CADFQ,S;;;;;;;;;;;;;;;;ACxBF;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBlB,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACRA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMmB,qBAAqB,GAAsB;AACtDC,aAAO,EAAE,IAD6C;AAEtDC,YAAM,EAAE,KAF8C;AAGtDC,WAAK,EAAE,KAH+C;AAItDC,kBAAY,EAAE;AAJwC,KAAjD;AAOA,QAAMC,cAAc,GAAsB;AAC/CJ,aAAO,EAAE,IADsC;AAE/CC,YAAM,EAAE,KAFuC;AAG/CC,WAAK,EAAE;AAHwC,KAA1C;AAKA,QAAMG,YAAY,GAAsB;AAC7CL,aAAO,EAAE,KADoC;AAE7CC,YAAM,EAAE,KAFqC;AAG7CC,WAAK,EAAE;AAHsC,KAAxC;AAKA,QAAMI,cAAc,GAAsB;AAC/CN,aAAO,EAAE,KADsC;AAE/CC,YAAM,EAAE,IAFuC;AAG/CC,WAAK,EAAE,KAHwC;AAI/CC,kBAAY,EAAE;AAJiC,KAA1C;;;;;;;;;;;;;;;;ACxBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYvB,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyB2B,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACP,KAAR,CAAcM,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClientModule }                from '@angular/common/http';\r\nimport { NgModule }                        from '@angular/core';\r\nimport { EffectsModule }                   from '@ngrx/effects';\r\nimport { StoreModule }                     from '@ngrx/store';\r\nimport { GithubService }                   from './Services/Github.service';\r\nimport { GithubEffects }     from './Store/Effects/Github.effects';\r\nimport { githubFeatureKey }  from './Store/Reducers/Github.store';\r\nimport { GithubUserReducer } from './Store/Reducers/GithubUser.reducer';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    HttpClientModule,\r\n    EffectsModule.forFeature([ GithubEffects ]),\r\n    StoreModule.forFeature(githubFeatureKey, GithubUserReducer),\r\n  ],\r\n  providers: [ GithubService ],\r\n  bootstrap: []\r\n})\r\nexport class GithubModule {\r\n}\r\n","import { HttpClient, HttpHeaders }        from '@angular/common/http';\nimport { Injectable }                     from '@angular/core';\nimport { Observable, of }                 from 'rxjs';\nimport { catchError }                     from 'rxjs/operators';\nimport { IGithubRepository, IGithubUser } from '../Models';\nimport { IGithubBranch }                  from '../Models/IGithubBranch';\n\n@Injectable()\nexport class GithubService {\n\n  public baseUrl: string = 'https://api.github.com';\n\n  constructor(\n    public http: HttpClient\n  ) {\n  }\n\n  private parseUrl(url: string) {\n    return url.replace(/{.+?}/, '');\n  }\n\n  private get headers() {\n    return {\n      'Content-Type': 'application/json',\n      Authorization: '443322e43320fd3a374b736708d65d606091714f'\n    };\n  }\n\n  public getUser(username: string): Observable<IGithubUser | null> {\n    return this.http.get<IGithubUser>(`${ this.baseUrl }/users/${ username }`, {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of(null))\n    );\n  }\n\n  public getUsersRepositories(user: IGithubUser): Observable<IGithubRepository[]> {\n    return this.http.get<IGithubRepository[]>(user.repos_url, {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of([]))\n    );\n  }\n\n  public getRepoBranches(repo: IGithubRepository): Observable<IGithubBranch[]> {\n    return this.http.get<IGithubBranch[]>(this.parseUrl(repo.branches_url), {\n      headers: this.headers\n    }).pipe(\n      catchError(() => of([]))\n    );\n  }\n}\n","import { createAction, props }            from '@ngrx/store';\r\nimport { IGithubRepository, IGithubUser } from '../../Models';\r\nimport { IGithubBranch }                  from '../../Models/IGithubBranch';\r\n\r\nexport const fetchUser = createAction('[Github] Get User', props<{ username: string }>());\r\nexport const fetchUserSuccess = createAction('[Github] Get User Success', props<{ user: IGithubUser }>());\r\nexport const fetchUserError = createAction('[Github] Get User Error');\r\n\r\nexport const fetchUsersRepos = createAction('[Github] Get User`s repositories', props<{ user: IGithubUser }>());\r\nexport const fetchUsersReposSuccess = createAction('[Github] Get User`s repositories Success', props<{ repos: IGithubRepository[] }>());\r\nexport const fetchUsersReposError = createAction('[Github] Get User`s repositories Error');\r\n\r\nexport const fetchRepoBranches = createAction('[Github] Get Repo`s branches', props<{ repo: IGithubRepository }>());\r\nexport const fetchRepoBranchesSuccess = createAction(\r\n  '[Github] Get Repo`s branches Success',\r\n  props<{ branches: IGithubBranch[], repo: IGithubRepository }>()\r\n);\r\nexport const fetchRepoBranchesError = createAction('[Github] Get Repo`s branches Error');\r\n\r\nexport const GithubActions = {\r\n  User: {\r\n    Load: {\r\n      Success: fetchUserSuccess,\r\n      Error: fetchUserError,\r\n      Fetch: fetchUser,\r\n    },\r\n    Repos: {\r\n      Success: fetchUsersReposSuccess,\r\n      Error: fetchUsersReposError,\r\n      Fetch: fetchUsersRepos,\r\n      Branches: {\r\n        Fetch: fetchRepoBranches,\r\n        Success: fetchRepoBranchesSuccess,\r\n        Error: fetchRepoBranchesError,\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { Injectable }                                from '@angular/core';\r\nimport { Actions, createEffect, ofType }             from '@ngrx/effects';\r\nimport { Store }                                     from '@ngrx/store';\r\nimport { of, throwError }                                       from 'rxjs';\r\nimport { map, mergeMap, catchError, withLatestFrom, concatMap } from 'rxjs/operators';\r\nimport { IGithubUser }                                          from '../../Models';\r\nimport { GithubService }                             from '../../Services/Github.service';\r\nimport {\r\n  fetchUser,\r\n  fetchUserError,\r\n  fetchUsersRepos,\r\n  fetchUsersReposError,\r\n  fetchUsersReposSuccess,\r\n  fetchUserSuccess, GithubActions\r\n} from '../Actions/Github.actions';\r\nimport { GithubState } from '../Reducers/Github.store';\r\n\r\n@Injectable()\r\nexport class GithubEffects {\r\n\r\n  fetchGithubUser = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(fetchUser),\r\n      mergeMap((action) => this.githubService.getUser(action.username)\r\n        .pipe(\r\n          map(user => fetchUserSuccess({user})),\r\n          catchError(() => of(fetchUserError))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  fetchGithubUsersRepos = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(fetchUsersRepos),\r\n      mergeMap((action) => this.githubService.getUsersRepositories(action.user)\r\n        .pipe(\r\n          map(repos => fetchUsersReposSuccess({repos})),\r\n          catchError(() => of(fetchUsersReposError))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  fetchGithubUsersReposBranches = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(GithubActions.User.Repos.Branches.Fetch),\r\n      concatMap((action) => this.githubService.getRepoBranches(action.repo)\r\n        .pipe(\r\n          map((branches) => GithubActions.User.Repos.Branches.Success({branches, repo: action.repo})),\r\n          catchError(() => of(GithubActions.User.Repos.Branches.Error))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private githubService: GithubService,\r\n    private store: Store<GithubState>\r\n  ) {}\r\n}\r\n","import { EntityState, EntityMap, createEntityAdapter }                                            from '@ngrx/entity';\r\nimport { EntityAdapter }                                                                          from '@ngrx/entity/src/models';\r\nimport { CommonStoreStatus, CommonStoreStatusInit, onErrorState, onLoadingState, onSuccessState } from '../../../../lib/Store/Common';\r\nimport { IGithubRepository, IGithubUser }                                                         from '../../Models';\r\nimport { IGithubBranch }                                                                          from '../../Models/IGithubBranch';\r\n\r\nexport const githubFeatureKey = 'github';\r\n\r\ninterface IRepositoryData {\r\n  data: IGithubRepository;\r\n  branches: {\r\n    data: EntityState<IGithubBranch>,\r\n    status: CommonStoreStatus,\r\n  };\r\n}\r\n\r\nexport const repositoryAdapter = createEntityAdapter<IRepositoryData>({\r\n  selectId: model => model.data.node_id,\r\n});\r\n\r\nexport const branchAdapter = createEntityAdapter<IGithubBranch>({\r\n  selectId: model => model.name,\r\n});\r\n\r\nexport interface GithubState {\r\n  user: {\r\n    data: IGithubUser,\r\n    status: CommonStoreStatus,\r\n    repos: {\r\n      data: EntityState<IRepositoryData>,\r\n      status: CommonStoreStatus\r\n    },\r\n  };\r\n}\r\n\r\nexport const initialGithubState: GithubState = {\r\n  user: {\r\n    data: null,\r\n    status: CommonStoreStatusInit,\r\n    repos: {\r\n      data: repositoryAdapter.getInitialState(),\r\n      status: CommonStoreStatusInit\r\n    },\r\n  }\r\n};\r\n\r\n\r\n","import { createReducer, on }                            from '@ngrx/store';\r\nimport { onErrorState, onLoadingState, onSuccessState, CommonStoreStatusInit } from '../../../../lib/Store/Common';\r\nimport {\r\n  fetchRepoBranchesSuccess,\r\n  fetchUser,\r\n  fetchUserError,\r\n  fetchUsersRepos,\r\n  fetchUsersReposError,\r\n  fetchUsersReposSuccess,\r\n  fetchUserSuccess\r\n}                                                               from '../Actions/Github.actions';\r\nimport { branchAdapter, initialGithubState, repositoryAdapter } from './Github.store';\r\n\r\nexport const GithubUserReducer = createReducer(initialGithubState,\r\n  on(fetchUser, state => ({\r\n    user: {\r\n      ...state.user,\r\n      data: null,\r\n      status: {\r\n        ...onLoadingState\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUserSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      data: action.user,\r\n      status: {\r\n        ...onSuccessState\r\n      },\r\n    }\r\n  })),\r\n  on(fetchUserError, state => ({\r\n    user: {\r\n      ...state.user,\r\n      data: null,\r\n      status: {\r\n        ...onErrorState\r\n      },\r\n    }\r\n  })),\r\n  on(fetchUsersRepos, state => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.getInitialState(),\r\n        status: {\r\n          ...onLoadingState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUsersReposSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.setAll(action.repos.map(repo => ({\r\n          data: repo,\r\n          branches: {\r\n            data: branchAdapter.getInitialState(),\r\n            status: {...CommonStoreStatusInit}\r\n          },\r\n        })), state.user.repos.data),\r\n        status: {\r\n          ...onSuccessState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchUsersReposError, state => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        data: repositoryAdapter.getInitialState(),\r\n        status: {\r\n          ...onErrorState\r\n        },\r\n      }\r\n    }\r\n  })),\r\n  on(fetchRepoBranchesSuccess, (state, action) => ({\r\n    user: {\r\n      ...state.user,\r\n      repos: {\r\n        ...state.user.repos,\r\n        data: repositoryAdapter.updateOne({\r\n          id: action.repo.node_id,\r\n          changes: {\r\n            branches: {\r\n              data: branchAdapter.setAll(action.branches, state.user.repos.data.entities[action.repo.node_id].branches.data),\r\n              status: {\r\n                ...onSuccessState\r\n              },\r\n            }\r\n          }\r\n        }, state.user.repos.data)\r\n      }\r\n    }\r\n  }))\r\n);\r\n\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { GithubState, githubFeatureKey }         from '../Reducers/Github.store';\r\n\r\n\r\nexport const githubState = createFeatureSelector<GithubState>(githubFeatureKey);\r\n\r\nconst getUser = createSelector(githubState, (state) => state.user.data);\r\nconst getUserStatus = createSelector(githubState, (state) => state.user.status);\r\nconst getRepos = createSelector(githubState, (state) => state.user.repos.data.entities);\r\nconst getReposStatus = createSelector(githubState, (state) => state.user.repos.status);\r\nconst getReposBranches = createSelector(\r\n  githubState,\r\n  (state: GithubState, props: {repoId: string}) => {\r\n    return state.user.repos.data.entities[props.repoId]?.branches.data.entities;\r\n  }\r\n);\r\n\r\nexport const GithubSelectos = {\r\n  getUser,\r\n  getUserStatus,\r\n  getRepos,\r\n  getReposStatus,\r\n  getReposBranches\r\n};\r\n","export { GithubModule } from './Github.module';\r\n","import { Component, OnDestroy, OnInit }       from '@angular/core';\nimport { Router }                from '@angular/router';\nimport { select, Store }         from '@ngrx/store';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { GithubState }                        from '../../GithubModue/Store/Reducers/Github.store';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: [ './header.component.sass' ]\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  public searchPhrase: string = '';\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription$: Subscription;\n\n  constructor(private store: Store<GithubState>, private router: Router) {\n  }\n\n  public ngOnInit(): void {\n    this.searchSubscription$ = this.searchSubject.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n    ).subscribe(username => {\n      this.router.navigate([ 'user', username ]);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.searchSubscription$) {\n      this.searchSubscription$.unsubscribe();\n    }\n  }\n\n  public searchChangeHandler(): void {\n    this.searchSubject.next(this.searchPhrase);\n  }\n}\n","<header class=\"header\">\n  <div class=\"container header-content\">\n    <div class=\"brand\">Github search</div>\n    <div class=\"search\">\n      <input type=\"search\"\n         class=\"search-input\"\n         placeholder=\"Github login\"\n         [(ngModel)]=\"searchPhrase\"\n         (change)=\"searchChangeHandler()\"\n      />\n    </div>\n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.sass']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"layout\">\n  <app-header></app-header>\n  <div class=\"layout-content container\">\n    <ng-content></ng-content>\n  </div>\n  <footer class=\"footer\">\n    <div class=\"container\">\n      Github app with way more code than asked for created by Marcin Labryga &copy; 2020\n    </div>\n  </footer>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { select, Store }            from '@ngrx/store';\nimport { Observable }               from 'rxjs';\nimport { map }                      from 'rxjs/operators';\nimport { IGithubRepository }        from '../../../../GithubModue/Models';\nimport { IGithubBranch }            from '../../../../GithubModue/Models/IGithubBranch';\nimport { GithubActions }            from '../../../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }           from '../../../../GithubModue/Store/Selectors/github.selectors';\n\n@Component({\n  selector: 'repo-tile',\n  templateUrl: './repo-tile.component.html',\n  styleUrls: [ './repo-tile.component.sass' ],\n\n})\nexport class RepoTileComponent implements OnInit {\n\n  @Input() public repo: IGithubRepository;\n  public branches$: Observable<IGithubBranch[]>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n\n    if (this.repo) {\n      this.store.dispatch(GithubActions.User.Repos.Branches.Fetch({ repo: this.repo }));\n    }\n\n    this.branches$ = this.store\n      .pipe(\n        select(GithubSelectos.getReposBranches, {repoId: this.repo.node_id}),\n        map(res => Object.values(res))\n      );\n  }\n\n}\n","<h3 class=\"repo-name\">{{ repo.name }}</h3>\n<p>{{ repo.description || \"No description\" }}</p>\n<div><b>Owner:</b> {{ repo.owner.login }}</div>\n<div *ngIf=\"branches$ | async as branches\">\n  <hr>\n  <h3>Branches: </h3>\n  <div *ngFor=\"let branch of branches\">\n    <b>{{ branch.name }}</b>\n    <div *ngIf=\"branch.commit\">&nbsp;{{ branch.commit.sha }}</div>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store }                       from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { CommonStoreStatus }        from '../../../../../lib/Store/Common';\nimport { IGithubRepository, IGithubUser } from '../../../../GithubModue/Models';\nimport { GithubActions }                  from '../../../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }                 from '../../../../GithubModue/Store/Selectors/github.selectors';\n\n@Component({\n  selector: 'app-repos-list',\n  templateUrl: './repos-list.component.html',\n  styleUrls: [ './repos-list.component.sass' ]\n})\nexport class ReposListComponent implements OnInit, OnDestroy {\n\n  public reposStatus$: Observable<CommonStoreStatus>;\n  private repos$: Subscription;\n  public  repos: IGithubRepository[];\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.reposStatus$ = this.store.pipe(select(GithubSelectos.getReposStatus));\n    this.repos$ = this.store.pipe(select(GithubSelectos.getRepos))\n      .subscribe(res => {\n        this.repos = Object.values(res)\n          .map(reso => reso.data)\n          .filter(reso => reso.fork !== true);\n      });\n\n    this.store.pipe(select(GithubSelectos.getUser)).subscribe(user => {\n      if (user !== null) {\n        this.store.dispatch(GithubActions.User.Repos.Fetch({ user }));\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (this.repos$) {\n      this.repos$.unsubscribe();\n    }\n  }\n\n}\n","<h2>Repositories:</h2>\n\n<div *ngIf=\"reposStatus$ | async as status\">\n  <span *ngIf=\"status.loading\">Loading ...</span>\n  <span *ngIf=\"status.error\">\n    {{status.errorMessage || \"Error\"}}\n  </span>\n\n  <div *ngIf=\"status.loaded && repos.length > 0\" class=\"repo-list\">\n    <repo-tile *ngFor=\"let repo of repos\" [repo]=\"repo\"></repo-tile>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store }     from '@ngrx/store';\nimport { Observable }        from 'rxjs';\nimport { CommonStoreStatus } from '../../../lib/Store/Common';\nimport { IGithubUser }       from '../../GithubModue/Models';\nimport { GithubActions }     from '../../GithubModue/Store/Actions/Github.actions';\nimport { GithubSelectos }    from '../../GithubModue/Store/Selectors/github.selectors';\nimport { selectRouteParam }  from 'src/app/router.selectors';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: [ './user-page.component.sass' ]\n})\nexport class UserPageComponent implements OnInit {\n\n  public user$: Observable<IGithubUser>;\n  public userStatus$: Observable<CommonStoreStatus>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit(): void {\n\n    this.store.pipe(select(selectRouteParam('username'))).subscribe(username => {\n      this.store.dispatch(GithubActions.User.Load.Fetch({ username }));\n    });\n\n    this.user$ = this.store.pipe(select(GithubSelectos.getUser));\n\n    this.userStatus$ = this.store.pipe(select(GithubSelectos.getUserStatus));\n    ;\n  }\n}\n\n","<div *ngIf=\"userStatus$ | async as status\">\n  <span *ngIf=\"status.loading\">Loading ...</span>\n  <span *ngIf=\"status.error\">\n    {{status.errorMessage || \"Error\"}}\n  </span>\n\n  <div *ngIf=\"status.loaded && user$ | async as user\">\n    <div class=\"user\">\n      <img [src]=\"user.avatar_url\" [alt]=\"user.login\" class=\"avatar\">\n      <div class=\"data\">\n        <h3>{{ user.name }}</h3>\n        <div>\n          <div><b>location:&nbsp;</b>{{ user.location }}</div>\n          <div><b>company:&nbsp;</b>{{ user.company }}</div>\n          <div><b>blog:&nbsp;</b><a [href]=\"user.blog\">{{user.blog}}</a></div>\n        </div>\n      </div>\n    </div>\n\n    <app-repos-list></app-repos-list>\n  </div>\n</div>\n","import { NgModule }             from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPageComponent }    from './Pages/user-page/user-page.component';\n\nconst routes: Routes = [\n  {\n    path: 'user/:username',\n    component: UserPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit }                          from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.sass' ]\n})\nexport class AppComponent {\n\n}\n","\n<app-layout>\n  <h1>Ngrx Github App</h1>\n  <router-outlet></router-outlet>\n</app-layout>\n\n","import { FormsModule }                 from '@angular/forms';\nimport { BrowserModule }               from '@angular/platform-browser';\nimport { NgModule }                                   from '@angular/core';\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\n\nimport { AppRoutingModule }         from './app-routing.module';\nimport { AppComponent }             from './app.component';\nimport { StoreDevtoolsModule }      from '@ngrx/store-devtools';\nimport { environment }              from '../environments/environment';\nimport { MetaReducer, StoreModule } from '@ngrx/store';\nimport { EffectsModule }            from '@ngrx/effects';\nimport { ServiceWorkerModule }      from '@angular/service-worker';\nimport { GithubModule }             from './GithubModue';\nimport { HeaderComponent }          from './Layout/header/header.component';\nimport { LayoutComponent }          from './Layout/layout/layout.component';\nimport { UserPageComponent } from './Pages/user-page/user-page.component';\nimport { ReposListComponent } from './Pages/user-page/Components/repos-list/repos-list.component';\nimport { RepoTileComponent } from './Pages/user-page/Components/repo-tile/repo-tile.component';\n\nexport const metaReducers: MetaReducer<{}>[] = !environment.production ? [] : [];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LayoutComponent,\n    UserPageComponent,\n    ReposListComponent,\n    RepoTileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    StoreModule.forRoot({\n      router: routerReducer,\n    }, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      }\n    }),\n    EffectsModule.forRoot([]),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule,\n    StoreRouterConnectingModule.forRoot(),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    GithubModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import * as fromRouter                           from '@ngrx/router-store';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport interface State {\r\n  router: fromRouter.RouterReducerState<fromRouter.MinimalRouterStateSnapshot>;\r\n}\r\n\r\nexport const selectRouter = createFeatureSelector<State,\r\n  fromRouter.RouterReducerState<fromRouter.MinimalRouterStateSnapshot>>('router');\r\n\r\nconst selectors = fromRouter.getSelectors(selectRouter);\r\n\r\n/**\r\n * select the current route\r\n * (custom implementation for better typings)\r\n */\r\nexport const selectCurrentRoute = createSelector(selectRouter, state => state.state.root);\r\n\r\nexport const {\r\n  selectQueryParams,\r\n  selectQueryParam,\r\n  selectRouteParams,\r\n  selectRouteParam,\r\n  selectRouteData,\r\n  selectUrl\r\n} = selectors;\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export interface CommonStoreStatus {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport const CommonStoreStatusInit: CommonStoreStatus = {\r\n  loading: true,\r\n  loaded: false,\r\n  error: false,\r\n  errorMessage: null\r\n};\r\n\r\nexport const onLoadingState: CommonStoreStatus = {\r\n  loading: true,\r\n  loaded: false,\r\n  error: false,\r\n};\r\nexport const onErrorState: CommonStoreStatus = {\r\n  loading: false,\r\n  loaded: false,\r\n  error: true,\r\n};\r\nexport const onSuccessState: CommonStoreStatus = {\r\n  loading: false,\r\n  loaded: true,\r\n  error: false,\r\n  errorMessage: null,\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}